CREATE FUNCTION dbo.SplitString
(
    @InputString NVARCHAR(MAX),
    @Delimiter CHAR(1)
)
RETURNS @OutputTable TABLE (Item NVARCHAR(MAX))
AS
BEGIN
    DECLARE @Start INT = 1,
            @End INT

    SET @End = CHARINDEX(@Delimiter, @InputString, @Start)

    WHILE @End > 0
    BEGIN
        INSERT INTO @OutputTable(Item)
        VALUES (SUBSTRING(@InputString, @Start, @End - @Start))

        SET @Start = @End + 1
        SET @End = CHARINDEX(@Delimiter, @InputString, @Start)
    END

    INSERT INTO @OutputTable(Item)
    VALUES (SUBSTRING(@InputString, @Start, LEN(@InputString) - @Start + 1))

    RETURN
END


CREATE PROCEDURE AssignRoleToUsers
    @Usernames NVARCHAR(MAX), -- Semi-colon delimited usernames
    @RoleName NVARCHAR(50)    -- Role name
AS
BEGIN
    SET NOCOUNT ON;

    -- Temporary table to store split usernames
    CREATE TABLE #TempUsernames (Username NVARCHAR(100));

    -- Split the delimited string into rows and insert into the temporary table
    INSERT INTO #TempUsernames (Username)
    SELECT TRIM(value) -- Remove leading/trailing spaces
    FROM STRING_SPLIT(@Usernames, ';');

    -- Iterate through each username
    DECLARE @CurrentUsername NVARCHAR(100);
    DECLARE @UserId INT;

    DECLARE UsernameCursor CURSOR FOR
    SELECT Username
    FROM #TempUsernames;

    OPEN UsernameCursor;
    FETCH NEXT FROM UsernameCursor INTO @CurrentUsername;

    WHILE @@FETCH_STATUS = 0
    BEGIN
        -- Check if the user exists
        SELECT @UserId = UserId
        FROM Users
        WHERE Username = @CurrentUsername;

        -- If the user doesn't exist, insert a new one
        IF @UserId IS NULL
        BEGIN
            INSERT INTO Users (Username)
            VALUES (@CurrentUsername);

            SET @UserId = SCOPE_IDENTITY(); -- Get the ID of the newly inserted user
        END

        -- Insert the role for the user
        INSERT INTO Roles (UserId, RoleName)
        VALUES (@UserId, @RoleName);

        -- Move to the next username
        FETCH NEXT FROM UsernameCursor INTO @CurrentUsername;
    END

    CLOSE UsernameCursor;
    DEALLOCATE UsernameCursor;

    -- Clean up the temporary table
    DROP TABLE #TempUsernames;

    SET NOCOUNT OFF;
END;

public boolean isTickerValid(String ticker, String exchange) {
    OpenFigiRequest[] request = new OpenFigiRequest[]{
            new OpenFigiRequest(ticker, exchange)
    };

    HttpHeaders headers = new HttpHeaders();
    headers.set("Content-Type", "application/json");

    HttpEntity<OpenFigiRequest[]> entity = new HttpEntity<>(request, headers);

    OpenFigiResponse[] response = restTemplate
            .exchange(figiUrl, HttpMethod.POST, entity, OpenFigiResponse[].class)
            .getBody();

    return response != null && response.length > 0 && response[0].getFigi() != null;
}

public class OpenFigiRequest {

    @JsonProperty("idType")
    private String idType = "TICKER";

    @JsonProperty("idValue")
    private String idValue;

    @JsonProperty("exchCode")
    private String exchCode;

    public OpenFigiRequest(String idValue, String exchCode) {
        this.idValue = idValue;
        this.exchCode = exchCode;
    }

    // Getters and Setters
}


@JsonIgnoreProperties(ignoreUnknown = true)
public class OpenFigiResponse {
    private String figi;
    private String name;

    public String getFigi() {
        return figi;
    }

    public String getName() {
        return name;
    }

    // Getters and Setters
}

@Service
public class FigiService {

    @Value("${openfigi.api.url}")
    private String figiUrl;

    @Value("${openfigi.api.key}")
    private String apiKey;

    private final RestTemplate restTemplate;

    public FigiService(RestTemplate restTemplate) {
        this.restTemplate = restTemplate;
    }

    public boolean isTickerValid(String ticker, String exchange) {
        OpenFigiRequest[] request = new OpenFigiRequest[]{
                new OpenFigiRequest(ticker, exchange)
        };

        HttpHeaders headers = new HttpHeaders();
        headers.set("Content-Type", "application/json");
        headers.set("X-OPENFIGI-APIKEY", apiKey);

        HttpEntity<OpenFigiRequest[]> entity = new HttpEntity<>(request, headers);

        OpenFigiResponse[] response = restTemplate
                .exchange(figiUrl, HttpMethod.POST, entity, OpenFigiResponse[].class)
                .getBody();

        return response != null && response.length > 0 && response[0].getFigi() != null;
    }
}

public boolean isTickerValid(String ticker, String exchange) {
    OpenFigiRequest[] request = new OpenFigiRequest[]{
            new OpenFigiRequest(ticker, exchange)
    };

    HttpHeaders headers = new HttpHeaders();
    headers.set("Content-Type", "application/json");

    HttpEntity<OpenFigiRequest[]> entity = new HttpEntity<>(request, headers);

    OpenFigiResponse[] response = restTemplate
            .exchange(figiUrl, HttpMethod.POST, entity, OpenFigiResponse[].class)
            .getBody();

    return response != null && response.length > 0 && response[0].getFigi() != null;
}
